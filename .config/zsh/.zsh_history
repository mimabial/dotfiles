cp .config .local .tmux.conf .zsh .zshenv .zshrc ~/
cp -r .config .local .tmux.conf .zsh .zshenv .zshrc ~/
v .user.zsh
sudo pacman -S nerd-fonts
v .tmux.conf
z alacrity
z .config/alacritty
v alacritty.toml
v .config/alcritty/alacritty.toml
v .config/alacritty/alacritty.toml
z .config
a
z DENv
la .themes
rmf Catppuccin-Latte Catppuccin-Mocha
rmf Decay-Green Frosted-Glass Synth-Wave
la Edge-Runner
fzf
rmf Catppuccin\ Latte Catppuccin\ Mocha Decay\ Green Frosted\ Glass Synth\ Wave
cd ~/DENv/Scripts\

install.sh
z .config/denv/themes
rmf Catppuccin\ Latte Catppuccin\ Mocha Frosted\ Glass Synth\ Wave
la Decay\ Green
z Decay\ Green/wallpapers
nemo
dolphin
dolphin .
rmf Material\ Sakura
rmf Graphite\ Mono Edge\ Runner
z .themes
rmf Graphite-Mono Material-Sakura Edge-Runner Synth-Wave 
la .config
pss bat
sc
z .config/waybar
z .local
la bin
la lib
la lib/denv
z lib/denv
v notifications.py
la\\
la
la\

v updates.jsonc
z keybindings.conf
v keybindings.conf
l;a
v notifications.jsonc
rm notifications.jsonc
v privacy.jsonc
rm privacy.jsonc
z waybar
rm workspaces\#\#kanji.jsonc workspaces\#\#roman.jsonc
v clock\#\#alt.jsonc
v config.
c DENv/Configs/.config/waybar/modules/ 
cd DENv/Configs/.config/waybar/modules/ 
cp DENv/Configs/.config/waybar/modules/* .config/waybar/modules
z modules
v pulseaudio.jsonc
code pulseaudio.jsonc
v config.ctl
v theme.css
v style.css
code style.css
pacman -S --needed go  # or your system's package manager\
git clone https://github.com/DENv-Project/denvctl.git\
cd denvctl\
make all
rmf denvctl/
pacman -S --needed go\
git clone https://github.com/DENv-Project/denvctl.git\
cd denvctl\
make all
make all
make install
sudo pacman -S nemo
rmf Ever\ Blushing
rmf Monterey\ Frost
rmf Rain\ Dark
rmf Ros√©\ Pine
rmf Monokai
pss jp2a
nvim .user.zsh
loadkeys fr
localectl set-keymap --no-convert fr
localectl list-keymaps | grep -i fr
loadkeys fr-latin1
loadkeys -C /dev/console fr
sudo loadkeys -C /dev/console fr
sudo loadkeys -C /dev/console fr-latin1
v /etc/vconsole.conf
localectl status
nvim /etc/vconsole.conf
cd .config/waybar
cd modules
cd denv-shell
sudo /etc/locale.gen
sudo nvim /etc/locale.gen
sudo nvim /etc/locale.conf
sudo ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime\
sudo hwclock --systohc\

reboot
sudo locale-gen
sudo nano /etc/vconsole.conf\

nvim hyprland.conf
cleqr
sudo pacman -S konsole
w
cd .local/bin/
cd ../lib
keyboardswitch.sh
cd ../../waybar/
../denv/themes/
xit
yay -S ohmyposh
sudo pacman -S oh-my-posh
yay -S oh-my-posh
denv-shell pm
cd .config/denv/themes
cd .config/hypr/
reload hyprctl
cp keybindings.conf /home/slim/key.txt
../../waybar/
code .
denvctl theme
nvim keybindings.conf
yay -R oh-my-posh\

rm /usr/lib/debug/usr/bin/oh-my-posh.debug
sudo rm /usr/lib/debug/usr/bin/oh-my-posh.debug
yay -S oh-my-posh-bin\

mkdir .poshthemes
curl -Lo ~/.poshthemes/1_shell.omp.json \\
     https://https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/1_shell.omp.json
curl -Lo ~/.poshthemes/1_shell.omp.json \\
     https://github.com/JanDeDobbeleer/oh-my-posh/blob/main/themes/1_shell.omp.json
source .zhsrc
ls ls -a
cd .poshthemes/
mkdir -p ~/.poshthemes && \\
for theme in cloud-context nordtron neko pararussel di4am0nd; do \\
  curl -sLo ~/.poshthemes/$theme.omp.json \\
    https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/${theme}.omp.json; \\
done\

ln -s neko.omp.json theme.omp.json
rm theme.omp.json neko.omp.json
ln -s nordtron.omp.json theme.omp.json
rm theme.omp.json nordtron.omp.json
ln -s pararussel.omp.json theme.omp.json
cd ~/.poshthemes/
rm theme.omp.json pararussel.omp.json
ln -s di4am0nd.omp.json theme.omp.josn
rm di4am0nd.omp.json
ln -s cloud-context.omp.json theme.omp.json
cd ~/HyE
cd ~/DENv
rm cloud-context.omp.json theme.omp.json
cd 
rm 1_shell.omp.json
ln -s 1_shell.omp.json theme.omp.josn
rm theme.omp.josn
curl -fsSL \\
  https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/1_shell.omp.json \\
  -o ~/.poshthemes/1_shell.omp.json
nvim ~/.zshenv
exit'\
exit\
exit'
cd .config/nvim/
cd .zshenv
aa
cd ~/.poshthemes
nvim 1_shell.omp.json
nvim .p10k.zsh
eixt
signal
rm .p10k.zsh
nvi, .zshrc
cd .zsh/themes
cp p10k.zsh ~/.p10k.zsh
git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.zsh/plugins/oh-my-zsh
# clone the standalone version\
git clone https://github.com/chrissicool/zsh-256color.git ~/.zsh/plugins/zsh-256color\

rmf .zsh/plugins/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-autosuggestions.git ~/.zsh/plugins/zsh-autosuggestions\

rmf .zsh/plugins/zsh-syntax-highlighting
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.zsh/plugins/zsh-syntax-highlighting\

nivm .zshrc
v .zshrc
v .zshenv
md completions
curl -Lo ~/.zsh/completions/git-completion.zsh \\
  https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.zsh
v .
sudo pacman -S zoxide
c
nvim .zshrc
z neo
z nvim
z .config/nvim
rm -f nvim
rm -f nvim/
rm -r nvim/
ln -s .config/nvim neocode
ln -s .config/nvim/ neocode/
rm -r neocode/
y
cd neocode
ln -s neocode .config/nvim
nvim nvim
rm nvim
rm neocode
mkdir .config/nvim
ln -s ~/neocode/ ~/.config/nvim/
cd .config/nvim
cd ..
rm -r nvim
ln -s ~/neocode ~/.config/nvim
cd .config
cd nvim
git pull
pacman -S stow
sudo pacman -S stow
stow . --adopt
stow .
rm -r dotfiles
cd dot
clea
rclear
rm -r DENv/ denvctl
cp .tmux.conf ~/.tmux.conf
cp .config/tmux ~/.config
cp -r .config/tmux ~/.config
cd plugins
git clone https://github.com/MunifTanjim/tmux-mode-indicator.git
git clone https://github.com/olimorris/tmux-pomodoro-plus.git
git clone https://github.com/tmux-plugins/tmux-cpu.git
git clone https://github.com/tmux-plugins/tmux-battery.git
git clone https://github.com/tmux-plugins/tmux-resurrect.git
git clone https://github.com/schasse/tmux-jump.git
git clone https://github.com/tmux-plugins/tmux-continuum.git
git clone https://github.com/christoomey/vim-tmux-navigator.git
cd .config/tmux/plugins
ls -a
git clone https://github.com/soyuka/tmux-current-pane-hostname.git
git clone https://github.com/tmux-plugins/tmux-open.git
git clone https://github.com/NHDaly/tmux-better-mouse-mode.git
cd .config/tmux
cd /etc/ly
nvim config.ini
sudo nvim config.ini
vi
builtin cd -- /home/slim/Desktop
nvim .zshenv
git clone https://github.com/alacritty/alacritty-theme.git
cd alacritty-theme/themes
cp everforest_dark.toml everforest_light.toml ~/.config/alacritty/themes
cd -
cp terafox.toml seashells.toml solarized_dark.toml solarized_light.toml solarized_osaka.toml kanagawa_dragon.toml kanagawa_wave.toml rose_pine_dawn.toml rose_pine_moon.toml rose_pine.toml nordfox.toml nord.toml nord_light.toml duskfox.toml dawnfox.toml carbonfox.toml ~/.config/alacritty/themes
z ala
cd dotfiles
git config --global user.email "mabialamirion@hotmail.fr"
git config --global user.name "Mabiala Mirion"\

gcom 'added themes'
git push
pacman -S thunar thunar-volman
sudo pacman -S thunar thunar-volman
sudo pacman -R thunar thunar-volman
pss librewolf
pss librewolf-bin
yay -S librewolf-bin
psr firefox
git clone https://github.com/DENv-Project/DENv.git
cd Scripts
z
z .zsh
pss pcmanfm-qt
pss thunar
psr thunar
psr dolphin
pss krita
psr krita igmp
psr krita gimp
gst-plugins-bad
psr gnome-music
psr totem
psr grilo-plugins
psr gst-plugins-bad
psr zbar
psr imagemagick
pss audacious strawberry
pss audacious
psr ffmpeg
pss elisa
pss rhythmbox
pss quolibet
pss quodlibet
psr rhythmbox quodlibet
psr strawberry
yay -A amarok
pss deadbeef
r
yay -S deadbeef
yay -R amarok
rm -r yay
sudo rm -r yay
sudo pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si
yay -S amarok
pss amberol
psr amberol
pss clementine strawberry
pss strawberry
pss lollypop
pss amberol blanket decibel
pss amberol blanket decibels
pss pantheon-music pragha quodlibet rhythmbox
psr amberol blanket decibels
psr pantheon-music pragha quodlibet rhythmbox
psr lollypop
z config
pss python-pywall
pss python-pywal
z lbib
z .local/lib/denv
git clone https://github.com/mimabial/dotfiles.git
chmod +x theme_select.sh
../denv/themes
cp themes ../custom-themes
cp -r themes ../custom-themes
cd share
cp -r fonts ~/.config/custom-themes
cp -r icons ~/.config/custom-themes
nf
z custom-themes
la themes
z Abyss\ Green
md Nord
cd Nord
..
md Gruvbox
cd Gruvbox
theme_select.sh -m menu
../..
mv themes ..
mv ../themes ./
theme_select.sh -m dmenu
theme_select.sh -m menu --debug
theme_select.sh -m fzf
theme_select.sh -m rofi
z bin
vi denv-shell
la rofi
la denv/rofi
vi assets
z share
cd denv
echo "hyprctl -j getoption decoration:rounding"
echo "$(hyprctl -j getoption decoration:rounding)"
echo "$(hyprctl -j getoption decoration:rounding | jq ".int")"
echo "$(hyprctl -j getoption decoration:rounding | grep -o '"int":[0-9]*' | cut -d: -f2)"
echo "$(hyprctl -j getoption decoration:rounding | grep -o '"int":[0-9]*')"
echo "$(hyprctl -j getoption decoration:rounding | grep -o '"int":^[0-9]+$')"
echo "$(hyprctl -j getoption decoration:rounding | sed -n 's/.*"int":\([0-9]*\).*/\1/p')"
echo "$(hyprctl -j getoption decoration:rounding | grep -o '"int": [0-9]*' | cut -d: -f2)"
echo "$(hyprctl -j getoption decoration:rounding | grep -o '"int": [0-9]*' | cut -d' ' -f2)"
echo "$(hyprctl -j getoption decoration:rounding | sed 's/.*"int": *\([0-9]*\).*/\1/')"
ffec
ffe
sudo pacman -S chromium
c d
fastfetch
z local
psr kitty
psr fish
psr starfish
hyprctl reload
echo $(hyprctl -j getoption decoration:rounding | jq '.int')
yay -S spaceship-prompt
la .zsh
cd .zsh
vi .zshrc
vi .zshenv
rm -r neocode
rm -rf neocode
git clone https://github.com/mimabial/neocode.git
vi neocode
zsh
git clone --depth=1 https://github.com/spaceship-prompt/spaceship-prompt.git "$HOME/.zsh/spaceship"
la .zsh/spaceship
echo "find /usr -name "*spaceship*""
echo "$(find /usr -name "*spaceship*")"
la
vi .zsh
chmod +x .spaceshiprc.zsh
sudo pacman -S foot
cd DENv
vi .spaceshiprc.zsh
z zsh
md spaceship
cd spaceship
\
\

cl
git clone --depth=1 https://github.com/spaceship-prompt/spaceship-vi-mode.git
git clone --depth=1 https://github.com/spaceship-prompt/spaceship-prompt.git
yay -R spaceship
exirt
grep -r "KEYMAP\|vicmd\|viins\|vi.mode\|INSERT\|NORMAL" ~/.zsh* ~/.zshrc ~/.zshenv
cat ~/.zsh/config/keybindings.zsh
type spaceship_vi_mode\
type zle-keymap-select
echo $SPACESHIP_PROMPT_ORDER
bindkey | grep -E "main|vicmd"
vi ~/.zsh/config/keybindings.zsh
source ~/.zshrc\

nvim .spaceshiprc.zsh
z tmux
z hypr
z lib
sudo pacman -S wezterm
cd
z conf
sudo pacman -R foot wezterm
yay -S wezterm-git
z denv
sudo pacman -S kitty starship fish
yay -R wezterm-git
z themes
clear
nvim .zsh
nvim .
denvctl theme import
sudo denvctl theme import
vi .
exit
clear
denvctl theme import
clear
sudo denvctl theme import
cd
rmd DENv
git clone https://github.com/DENv-Project/DENv.git
cd DENv/Scripts
install.sh
vi .
z themes
vi .
z conf
..
la
cd DENv/Scripts
install.sh
denvctl theme import
y
clear
sudo pacman -R pacmanfm-qt
sudo pacman -R pcmanfm-qt
pacman -R firefox
sudo pacman -R firefox
clear
vi .
nvim eyecare-status.sh
nvim .
...
clear
nvim .
nvim .
cd ~/.config
nvim .
cd ~/neocode
nivm .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
cd ~/.config
clear
nvim .
cd ~/neocode/
git commit -m 'fix relativelinenumber'
ls -a
nvim .gitignore
git add .
git commit -m 'fix relativelinenumber'
git push
ls -a
rm -rf .git .gitignore
..
mkdir code
mv -a neocode/. code/
mv neocode/* code/
cd neocode
ls -a
nvim .
nvim .
..
rm -r neocode
git clone git@github.com:mimabial/neocode.git
mv code/* neocode/
sudo mv code/* neocode/
cd neocode
git add .
git commit -m 'fix relativelinenumber'
git push
nvim .
clear
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
git add .
git commit -m 'fix telescope'
git push
nvim .
nvim .
git add .
git commit -m 'fix telescope'
git push
nvim .
nvim .
nvim .
nvim .
nvim .
clear
clear
clear
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
clear
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
clear
nvim .
nvim .
nvim .
nvim .
nvim .
cleqr
clear
git add .
git commit -m "fix telescope plugin"
git push
nvim .
cd
nvim .
clear
ls -a
cd .config
cd zsh
clear
nvim .
..
cd alacritty
clear
nvim .
nvim .
clear
reboot
clear
exit
nvim .
exit
exit
nvim eyecare-status.sh
nvim .
nvim .
exit
exit
nvim .
clear
exit
nvim .
exit
nvim eyecare-status.sh
cd
clear
cd .config/denv
..
nvim .
clear
cd alacritty
nvim .
nvim .
clear
cd
cd .config
nvim .
eixt
exit
../zsh
..
cd zsh
nvim .
nvim .
exit
\
\

..
cd zsh
nvim .
exit
..
cd zsh
nvim .
exit
cd ..
cd zsh
nvim .
exit
nvim .
clear
exit
nvim .
..
cd zsh
nvim .p10k.zsh
exit
cd ../zsh
nvim .p10k.zsh
exit
cd ../zsh
nvim .p10k.zsh
p10k configure
clear
p10k configure
p10k configure
clear
p10k configure
clear
p10k configure
clear
p10k configure
p10k configure
clear
nvim .p10k.zsh
clear
exit
exit
exit
...
nvim .tmux.conf
exit
exit
../tmux
cd ../tmux
nvim .
exit
exit
cd ../tmux
nvim .
exit
exit
cd ../tmux
nvim .
exit
exit
exit
exit
cd ../tmux
nvim .
exit
ls -a
exit
ls -a
exit
exit
cd ../tmux
nvim .
cd ~/.local/share
fastfetch
sudo pacman -R fastfetch
rm -rf fastfetch/
clear
cd
clear
sudo pacman -S wezterm
sudo pacman -S wezterm
cd
cd .config
nvim .
wezterm
sudo pacman -S ghostty
cd
clear
cd .config/wezterm/
nvim .
..
rm -rf wezterm
sudo pacman -R wezterm
nvim .
clear
sudo pacman -R ghostty 
nvim .
reboot
nvim .
clear
clear
l
clear
ll
clear
l
clear
ld
clear
lt
clear
eza -a
r
eza -a
clear
source ~/.zshrc\

clear
ls -a
ls
eza
clear
exit
ls -a
eza
clear
cd .config/
nvim .
exit
clear
ls
ls -a
eza
clear
nvim .
ls
exit
nvim .
exit
ls
clear
nvim .
exit
nvim .
exit
exit
exit
exit
cd .config/tmux
nvim .
clear
exit
..
clear
cd tmux/
nvim status.tmux.conf
clear
exit
nvim .
exit
exit
nvim .
exit
cd .config/kitty/
nvim .
exit
exit
cd .config/kitty/
nvim .
exit
exit
cd .config/kitty/
nvim cat.conf
exit
nvim .
clear
cd
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
chmod +x .config/tmux/scripts/cpu-temp.sh
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
clear
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
clear
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
tmux source-file .tmux.conf
exit
nvim tab_bar.py
exit
exit
exit
cd .config/tmux
nvim status.tmux.conf
exit
tmux source-file .tmux.conf
cd .config/tmux
nvim status.tmux.conf
exit
exit
tmux source-file .tmux.conf
exit
cd .config/tmux
nvim status.tmux.conf
tmux source-file .tmux.conf
cd
tmux source-file .tmux.conf
cd .config/tmux
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
cd ~/.config/tmux/
nvim tab_bar.py
cd ~/.config/kitty
nvim tab_bar.py
exit
cd ~/.config/kitty
nvim tab_bar.py
exit
cd ~/.config/kitty
nvim tab_bar.py
exit
cd ~/.config/kitty
nvim tab_bar.py
exit
cd ~/.config/tmux/
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
nvim status.tmux.conf
tmux source-file ~/.tmux.conf
cd
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
tmux source-file ~/.tmux.conf
cd ~/.config/zsh/
nvim .
source ~/.zshrc\

source ~/.zshenv\

clear
exit
exit
p10k configure
clear
ls -a~
ls -a
exit
echo $SPACESHIP_PROMPT_ORDER
sudo pacman -Q
clear
p10k configure
clear
exit
source ~/.zshenv
clear
exit
exit
../tmux
cd ../tmux
clear
nvim .
clear
exit
cd ~/.config/zsh/
nvim .
clear
clear
nvim .
source ~/.zshenv
clear
clear
clear
clear
echo $SPACESHIP_PROMPT_ORDER
cd
exit
exit
cd ~/.config/zsh/
nvim .
clear
source ~/.zshenv
clear
help
nvim .
source ~/.zshenv
clear
tmux
exit
tmux kill-session -a
tmux list-sessions
cd .config
nvim .
which zsh
clear
source ~/.zshenv
clear
exit
sudo pacman -R starship
sudo pacman -R alacritty
clear
exit
cd .config/kity
cd .config/kitty
cd kitty
nvim tab_bar.py
exit
cd .config
nvim .
yazi
ranger
lf
sudo pacman -R fish-git
yay -R fish-git
yay -Q | fish
yay -Q | grep fish
yay -R fish
sudo pacman -S firefox
sudo pacman -R librewolf
yay -R librewolf
yay -R librewolf-bin
clear
yay -Q | grep librewolf
yay -R librewolf-bin-debug
clear
yay -S librewolf-bin
clear
yay -R librewolf-bin
yay -R librewolf-bin-debug
clear
yay -S librewolf-bin
clear
sudo pacman -R firefox
clear
tmux
exit
exit
cd .config/kitty
nvim tab_bar.py
tmux
exit
nvim .config/kitty/tab_bar.py
edxit
exit
exit
tmux
exit
cd .config/kitty
nvim .
echo $color0
nvim .
nvim .
exit
exit
cd .config/kitty
nvim .
exit
nvim .
p10k configure
clear
exit
exit
exit
tmux
exit
exit
cd .config/denv/themes
nvim .
p10k configure
cd
cd .local/share/themes
ls -a
exit
cd .config/denv/themes
nvim .
p10k configure
cd ~/.config/kitty
nvim tab_bar.py
exit
exit
cd ~/.config/kitty
nvim tab_bar.py
echo THE?E¬∞CONFIG¬∞PQTH
echo THEME_CONFIG_PATH
echo $THEME_CONFIG_PATH
nvim tab_bar.py
exit
exit
cd
exit
cd ~/.config/kitty
nvim tab_bar.py
exit
cd ~/.config/kitty
cd
cd ~/.config/kitty
exit
exit
cd ~/.config/kitty
nvim .
nvim .
exit
exit
cd ./local/bin/
cd ~/.local/lib
nvim .
tmux
cd ~/.local/lib/denv
nvim cliphist.sh
cd ~/.local/share
cd waybar
nvim .modules
nvim .
git clone https://github.com/HyDE-Project/hyde-themes.git
cd hyde-themes
clear
git checkout Nordic-Blue
dolphin .
..
rm -rf hyde-themes
cd .config/denv/themes
cd Nordic\ Blue
nvim hypr.theme
cd .local/lib/denv
nvim cliphist.sh
cd Downloads
nvim Sans\ nom\ 1.odt
cd ./local/lib/denv
cd ~/.local/lib/denv
nvim cliphist.sh
...
cd share/waybar/modules
nvim .
cd .local/share/waybar/modules
nvim custom-cliphist.jsonc
cd .config/kitty
nvim .
nvim .
exit
exit
exit
cd .config/kitty
cd
exit
exit
cd .config/kitty
nvim .
exit
cd .config/kitty
nvim .
exit
cd .config/kitty
nvim .
clear
nvim .
exit
exit
cd .config/kitty
nvim .
exit
ls -a
clear
ls --color=auto
clear
ls --color=auto
clear
ls --color=auto
eza
eza
#ls --color=auto
 #jump one word left
 #jump one word left
 #jump one word left
exit
cd .local/share/waybar/modules
nvim custom-cliphist.jsonc
...
..
cd lib/denv/
nvim cliphist.sh
cd ../../share/waybar/modules
nvim custom-cliphist.jsonc
cd ../../../lib/denv
nvim custom-cliphist.jsonc
ls -a
nvim cliphist.sh
cd ../../share/waybar/modules
ls -a
eza -a
eza -
eza -l
clear
ls
ls -a
clear
tmux
exit
ffcd
ffe
bluez
systemctl start bluetooth.service
systemctl status bluetooth.service
systemctl enable bluetooth.service
systemctl enable bluetooth.service
systemctl status bluetooth.service
bluetoothctl
reboot
ffcd
nvim 11
nvim cd ../layouts/
cd ../layouts
nvim hyprdots/11.jsonc
rm hyprdots/17.jsonc
..
nvim .
fc-list | grep -i awesome
sudo pacman -Q | grep awesome
sudo pacman -Q | grep ttf
sudo pacman -S ttf-font-awesome
fc-list | grep -i awesome
nvim modules/pulseaudio.jsonc
nvim .
ffec
cd
ffcd
ffec
nvim .
fc-list | grep -i awesome
killall waybar && waybar &
fc-cache -fv
cd -
ffcd
nvim .
echo -e "\uf007"
echo -e "\uf015" 
echo -e "\uf013"
ffec
ffbc font-family
ffbc font-family
killall waybar && waybar &
cd
ffcd
ffbc font-family
cd
ffcd
ffbc font-family
killall waybar && waybar &
nvim modules/pulseaudio.jsonc
echo -e "\f000"
clear
nvim modules/pulseaudio.jsonc
nvim layouts/hyprdots/16.jsonc
cd .config/kitty
nvim .
cd .local/share/waybar/layout
cd .local/share/waybar/layouts
clear
nvim .
...
..
cd lib/denv
nvim weather.py
cd ~/.config/zsh
nvim .
source ~/.zshenv
cd ~/.local/lib/denv
nvim weather.py
ls -a ~/.
...
cd state/denv
nvim .
cd ~/.config/zsh
nvim
nvim .
clear
cd ~/.local/state/denv
nvim config
fzf
clear
cd ~/.config/zsh
nvim .
builtin cd -- /home/slim/.config/zsh/completions
ls -a
clear
cd
ffcd
ffcd
fcd
ffcd
builtin cd -- /home/slim/.local/share/waybar/modules
cd
clear
builtin cd -- /home/slim/.config/zsh/functions
nvim .
ffcd
cd
ffcd
ffch
ffcd
nvim .
ffcd
nvim .
cd
fcd
ffcd
cd -
nvim fzf
ls -a
nvim fzf.zsh
ffcd
nvim fzf.zsh
ffcd
nvim fzf.zsh
ffcd
ffe
ffec
ffe
ffch
nvim fzf.zsh
ffec
nvim fzf.zsh
ffec
cd
ffec
clear
ffe
ffcd
nvim .
ffcd
cd
ffcd
nvim fzf.zsh
ffsc
ffbc
ffec
ffbc
nvim fzf.zsh
ffec local
nvim fzf.zsh
nvim fzf.zsh
ffec
ffec
ffe
nvim fzf.zsh
ffe
clear
nvim fzf.zsh
ffe -p
ffe
nvim fzf.zsh
ffch
nvim fzf.zsh
ffe
ffe -p
nvim fzf.zsh
ffe -p
nvim fzf.zsh
ffe -p
nvim fzf.zsh
ffe -p
ffch
ffec
ffbc
nvim fzf.zsh
ffbc foo
nvim fzf.zsh
ffbc
ffbc foo
ffbc bat
cd
ffcd
nvim denv/staterc
../lib/denv
cd ../lib/denv
nvim .
cd
ffcd
nvim fzf.zsh
cd
ffcd
clear
ffe
nvim .
nvim .
ffcd
nvim .
...
..
cd lib/denv
ls -a
cd
ffcd
nvim bluetooth.jsonc
exit
hyprctl -j devices | jq '.keyboards[] | select(.main == true) | .active_keymap'
hyprctl -j getoption input:kb_layout
exit
cd
ls -a
cd HyDE/Configs/.local/share/waybar/modules/
ls -a
cp bluetooth.jsonc ~/.local/share/waybar/modules
3.
...
...
cd .local/lib/hyde/
ls -a
cd
ffcd
nvim .
nvim .
chmod +x debug-layout.sh
debug-layout.sh
debug-layout.sh
debug-layout.sh
debug-layout.sh
nvim .
exit
ffcd
nvim .
hyprctl -j devices | jq -r '.keyboards[] | select(.main == true) | .active_keymap'
hyprctl -j devices | jq -r '.keyboards[] | select(.main == true) | .active_keymap'
hyprctl -j devices | jq -r '.keyboards[] | select(.main == true) | .active_keymap'
hyprctl -j devices | jq -r '.keyboards[] | select(.main == true) | .active_keymap'
sudo pacman -Q | grep pipe
sudo pacman -Q | grep lsof
sudo pacman -Q | grep pulse
sudo pacman -Q | grep systemd
sudo pacman -S lsof
gnome-control-center
gnome-control-center
sudo pacman -Q | grep portal
sudo pacman -Q | grep grim
clear
ffcd
privacy.py open-settings
gnome-control-center privacy
plasma-systemsettings5
pavucontrol
hyprland-settings
clear
denv-shell privacy kill-camera-apps
denv-shell privacy open-settings
denv-shell privacy test
denv-shell privacy open-settings
denv-shell privacy kill-camera-apps
clear
denv-shell privacy test
denv-shell privacy list-devices
clear
denv-shell privacy test
nvim privacy.py
exit
ffcd
nvim .
ffcd
nvim fzf.zsh
ffcd
nvim fzf.zsh
ffcd
ffcd
nvim fzf.zsh
ffcd
cloear
clear
cd
ffcd
nvim hyprdots/16.jsonc
ffcd
nvim .
nvim privacy.py
ls -a
chmod +x privacy.py
privacy.py open-settings
nvim privacy.py
clear
privacy.py explain-devices
privacy.py list-devices
sudo pacman -S v4l2-utils
sudo pcman -Q | dump
sudo pcman -Q | grep dump
sudo pacman -Q | grep dump
sudo pacman -S v4l-utils
nvim privacy.py
privacy.py toggle-webcam
nvim privacy.py
privacy.py who-is-using
sudo lsof /dev/video*
ls -la /dev/video*
pw-dump | grep -A 10 -B 5 "Video"
v4l2-ctl --list-devices
clear
nvim privacy.py
killall waybar && waybar &
clear
clear
exit
clear
exit
pavucontrol
exit
lsmod | grep -E "(video|cam|usb)" | head -10
udevadm info --name=/dev/video0 | grep DRIVER=
dmesg | grep -i -E "(video|camera|webcam)" | tail -5
ffcd
nvim .
cd
ffcd
nvim custom-privacy.jsonc
reboot
ffcd
clear
sudo lsof /dev/video*
privacy.py status
ls -la /dev/video*\
v4l2-ctl --list-devices
nvim privacy.py
nvim privacy.py
privacy.py toggle-webcam
nvim privacy.py
privacy.py toggle-webcam
nvim privacy.py
privacy.py toggle-webcam
privacy.py toggle-webcam
privacy.py toggle-webcam
nvim privacy.py
privacy.py debug-toggle
privacy.py toggle-webcam
clear
lsmod | grep uvc\
ls -la /dev/video*
sudo modprobe -r uvcvideo
nvim privacy.py
lsmod | grep -i video\
lsmod | grep -i cam\
lsmod | grep -i usb
clear
privacy.py dbug-toggle
privacy.py status
nvim privacy.py
cp ~/Downloads/privacy.py ~/.local/lib/denv
killall waybar && waybar &
exit
exit
ffcd
nvim privacy.py
cd
nvim Downloads/waybar_privacy_module.py
cp Downloads/privacy.py .local/lib/denv
ffcd
privacy.py debug-toggle
privacy.py toggle-webcam
privacy.py toggle-webcam
privacy.py toggle-webcam
privacy.py toggle-webcam
privacy.py
nvim privacy.py
cp ~/Downloads/privacy.py ~/.local/lib/denv
privacy.py toggle-webcam
privacy.py toggle-webcam
chmod +x privacy.py
privacy.py toggle-webcam
privacy.py toggle-webcam
nvim privacy.py
privacy.py toggle-webcam
sudo pacman -S visudo
sudo pacman -S vi
privacy.py toggle-webcam
cp ~/Downloads/privacy-non-sudo.py ~/.local/lib/denv
privacy-non-sudo.py
chmod +x privacy-non-sudo.py
privacy-non-sudo.py toggle-webcam
which modprobe
sudo visudo /etc/sudoers
privacy-non-sudo.py toggle-webcam
privacy-non-sudo.py toggle-webcam
rm privacy.py
mv privacy-non-sudo.py privacy.py
privacy.py toggle-webcam
cp ~/Downloads/waybar_privacy_module.py ~/.local/lib/denv
chmod +x waybar_privacy_module.py
cp ~/Downloads/privacy53.py ~/.local/lib/denv
chmod +x privacy53.py
privacy53.py status
nvim privacy53.py
privacy53.py
cp ~/Downloads/privacy-54.py ~/.local/lib/denv
chmod +x privacy-54.py
rm privacy.py privacy53.py
mv privacy-54.py privacy.py
nvim privacy.py
privacy.py show_menu
exit
waybar --version
waybar -l debug 2>&1 | grep -i menu
waybar -l debug 2>&1 | grep -i menu
ffcd
cd menus
nvim .
cd
ffcd
clear
nvim privacy.py
cp privacy.py privacy.py.bak
nvim privacy.py
ffcd
nvim privacy.py
denv-shell privacy toggle-webcam
cp ~/Downloads/privacy.py ~/.local/lib/denv
ffcd
nvim hyprdots/16.jsonc
ffcd
nvim custom-privacy.jsonc
cd ~/Downloads
nvim waybar_privacy_module.py
cp ~/Downloads/privacy.py ~/.local/lib/denv/
sudo visudo /etc/sudoers
sudo visudo /etc/sudoers
sudo vim /etc/sudoers
sudo vim /etc/sudoers
sudo modprobe -r uvcvideo
sudo modprobe uvcvideo
cp ~/Downloads/privacy.py ~/.local/lib/denv/
sudo visudo /etc/sudoers
sudo modprobe -r uvcvideo
sudo modprobe uvcvideo
clear
lsmod | grep uvcvideo
ls /dev/video*
sudo modprobe -r uvcvideo
ls /dev/video*
sudo modprobe uvcvideo
ls /dev/video*
clear
ls /dev/video*
ls /dev/video*
ls /dev/video*
clear
cd
ffcd
nvim privacy.jsonc
ffcd
nvim privacy.py
ffcd
nvim defaults.css
ffcd
nvim hyprdots/16.jsonc
ffcd
cp privacy.py.bak privacy.py
cp privacy.py.bak privacy.bak
rm privacy.py.bak
waybar &
nvim .
nvim .
sudo visudo /etc/sudoers
sudo vim /etc/sudoers
clear
nvim .
chmod +x audio_video_privacy.py network_privacy.py hardware_privacy.py data_privacy.py system_privacy.py privacy_tools.py
nvim audio_video_privacy.py
audio_video_privacy.py toggle-camera
audio_video_privacy.py toggle-webcam
nvim audio_video_privacy.py
clear
clear
c
exit
cd ./local/lib/denv
ls -a
cd .local
cd lib/denv
clear
nvim privacy.py
audio_video_privacy.py toggle-webcam
cd ../../share/waybar/modules
nvim custom-privacy.jsonc
cd ../../../lib/denv
nvim audio_video_privacy.py
nvim password_prompt.py
notify-send "Test" "Check if notifications work"
password_prompt
chmod +x password_prompt.py
password_prompt
password_prompt.py
nvim debug_waybar.sh
chmod +x debug_waybar.sh
nvim /tmp/waybar_debug.log
nvim test_floating.py
chmod +x test_floating.py
clear
cd
ffcd
ls -a
nvim windowrules.conf
cd
cd .local/lib/denv
clear
nvim test_floating.py
hyprctl reload
cd
cd .config/hypr
nvim windowrules.conf
hyprctl reload
cd .local/lib/denv
cd .local/lib/denv
cd
cd .local/lib/denv
clear
nvim password_prompt.py
nvim audio_video_privacy.py
network_privacy.py status
nvim network_privacy.py
network_privacy.py connections
network_privacy.py toggle-vpn
yay -S mullvad-vpn-bin
clear
network_privacy.py toggle-vpn
sudo pacman -S wireguard-tools
yay -R mullvad-vpn-bin
clear
sudo systemctl enable --now mullvad-deamon.service
sudo mkdir -p /etc/wireguard
ffcd
nvim .
..
cd layouts
nvim hyprdots/16.jsonc
..
cd modules
nvim custom-privacy.jsonc
cd
ffcd
audio_video_privacy.py toggle-webcam
nvim audio_video_privacy.py
audio_video_privacy.py toggle-webcam
audio_video_privacy.py modules-status
audio_video_privacy.py enable-camera-hardware
audio_video_privacy.py disable-audio-hardware
audio_video_privacy.py modules-status
nvim audio_video_privacy.py
nvim audio_video_privacy.py
privacy.py toggle-webcam
nvim privacy.py
privacy.py toggle-webcam
nvim password_prompt.py
cd ../../share/waybar/modules
nvim custom-audio-video-privacy.jsonc
sudo pacman -S firefox
clear
cd ../layouts
nvim hyprdots/16.jsonc
nvim hyprdots/16.jsonc
clear
ffcd
nvim custom-audio-video-privacy.jsonc
...
..
cd lib/denv
nvim privacy.py
audio_video_privacy.py toggle-webcam
chmod +x audio_video_privacy.py network_privacy.py hardware_privacy.py data_privacy.py system_privacy.py privacy_tools.py
audio_video_privacy.py toggle-webcam
clear
cd ../../share/waybar/modules
nvim custom-audio-video-privacy.jsonc
cd ../../../lib/denv
rm privacy.py
cp privacy.bak privacy.py
cd ../../share/waybar/modules
nvim custom-privacy.jsonc
cd ../../../lib/denv
nvim audio_video_privacy.py
cd ../../share/waybar/layouts/hyprdots
nvim 16.jsonc
sudo wg-quick up fr-par-wg-001
sudo nmcli connection delete fr-par-wg-001
sudo wg-quick up fr-par-wg-001
cd .local/lib/denv
network_privacy.py status
ip link show
wg show
sudo wg show
ip route show
pgrep -c wireguard
pgrep
pgrep --help
pgrep -a
pgrep -w
pgrep -l
clear
ip link show
ip link show | grep wg
sudo wg-quick down fr-par-wg-001
ip link show | grep wg
ip link show
cd ./local/lib/denv
ls -a
cd .local
cd lib/denv
clear
nvim privacy.py
audio_video_privacy.py toggle-webcam
cd ../../share/waybar/modules
nvim custom-privacy.jsonc
cd ../../../lib/denv
nvim audio_video_privacy.py
nvim password_prompt.py
notify-send "Test" "Check if notifications work"
password_prompt
chmod +x password_prompt.py
password_prompt
password_prompt.py
nvim debug_waybar.sh
chmod +x debug_waybar.sh
nvim /tmp/waybar_debug.log
nvim test_floating.py
chmod +x test_floating.py
clear
cd
ffcd
ls -a
nvim windowrules.conf
cd
cd .local/lib/denv
clear
nvim test_floating.py
hyprctl reload
cd
cd .config/hypr
nvim windowrules.conf
hyprctl reload
cd .local/lib/denv
cd .local/lib/denv
cd
cd .local/lib/denv
clear
nvim password_prompt.py
nvim audio_video_privacy.py
network_privacy.py status
nvim network_privacy.py
network_privacy.py connections
network_privacy.py toggle-vpn
yay -S mullvad-vpn-bin
clear
network_privacy.py toggle-vpn
sudo pacman -S wireguard-tools
yay -R mullvad-vpn-bin
clear
sudo systemctl enable --now mullvad-deamon.service
sudo mkdir -p /etc/wireguard
sudo cp ~/Downloads/mullvad_wireguard_linux_all_all\*.conf /etc/wireguard
sudo cp ~/Downloads/mullvad_wireguard_linux_all_all\ \(1\)/*.conf /etc/wireguard
sudo chmod 600 /etc/wireguard/*.conf
ls -a /etc/wireguard
sudo ls -a /etc/wireguard
clear
sudo chmod 600 /etc/wireguard/*.conf
sudo ls -a /etc/wireguard/
clear
sudo chown root:root /etc/wireguard/*.conf
sudo ls -a /etc/wireguard/
sudo ls -a /etc/wireguard/*
cd
ls -a .bash_history Downloads/*
ls -a /etc/wireguard/*
sudo chmod 600 /etc/wireguard/za-jnb-wg-001.conf
sudo chmod 600 /etc/wireguard/za-jnb-wg-001.conf
sudo chmod 600 /etc/wireguard/*.conf
cd /etc/wireguard
sudo cd /etc/wireguard
sudo cd -s /etc/wireguard
sudo -s
sudo -D chmod 600 /etc/wireguard/*.conf
sudo -s
ls -la /etc/wireguard/
sudo ls -la /etc/wireguard/
sudo -s
sudo ls -la /etc/wireguard/
sudo cat /etc/wireguard/za-jnb-wg-002.conf
sudo wg-quick up fr-par-wg-001
systemctl status systemd-resolved
sudo systemctl enable --now systemd-resolved
sudo ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
sudo wg-quick up fr-par-wg-001
sudo nmcli connection import type wireguard file /etc/wireguard/fr-par-wg-001.conf
nmcli connection up fr-par-wg-001
sudo pacman -S systemd-resolvconf
clear
sudo wg-quick up fr-par-wg-001
sudo wg-quick down fr-par-wg-001
clear
sudo wg-quick up fr-par-wg-001
sudo ip link delete dev fr-par-wg-001
sudo wg-quick up fr-par-wg-001
cd .local/lib/denv
clear
network_privacy.py status
pgrep -c tor
pgrep tor
pgrep -f tor
systemctl status tor.service
ps aux | grep tor
clear
ps aux | grep -i tor | grep -v grep
pgrep -x tor
nvim network_privacy.py
network_privacy.py status
nvim network_privacy.py
cd .local/lib/denv
hardware_privacy.py
upower
exit
sudo pacman -S tor
tor
sudo pacman -R tor
clear
sudo pacman -S torbrowser-launcher
clear
cd .local/share/waybar/modules
clear
nvim .
cd ../layouts/hyprdots
nvim 16.jsonc
exit
cd .local/lib/denv
nvim network_privacy.py
nvim hardware_privacy.py
hardware_privacy.py usb-devices
nvim hardware_privacy.py
nvim audio_video_privacy.py
nvim hardware_privacy.py
hardware_privacy.py interactive-unmount
nvim hardware_privacy.py
hardware_privacy.py interactive-unmount
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-mount
nvim hardware_privacy.py
hardware_privacy.py interactive-unmount
findmnt -J vfat,ntfs,ext4,exfat
findmnt -J -t vfat,ntfs,ext4,exfat
findmnt -J
nvim hardware_privacy.py
hardware_privacy.py interactive-unmount
hardware_privacy.py interactive-unmount
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-mount
nvim hardware_privacy.py
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-mount
chmod +x hardware_privacy.py
hardware_privacy.py interactive-mount
nvim hardware_privacy.py
ip link show
sudo wg-quick up fr-par-wg-001
clear
ip link show
cd .local/lib/denv
clear
network_privacy.py status
clear
hardware_privacy.py status
bluetoothctl
clear
nvim hardware_privacy.py
hciconfig
sudo pacman -Q | grep blue
bluetoothctl list
clear
hardware_privacy.py status
hardware_privacy.py
hardware_privacy.py status
hardware_privacy.py status
clear
hardware_privacy.py status
hardware_privacy.py status
hardware_privacy.py status
hardware_privacy.py
bluetoothctl show
clear
bluetoothctl show
clear
hardware_privacy.py status
clear
hardware_privacy.py status
clear
bluetoothctl show
clear
cd ../../share/waybar/modules
nvim hardware_privacy.py
nvim .
upower -e
cd ../../../lib/denv
hardware_privacy.py status
hardware_privacy.py status
upower -i /org/freedesktop/UPower/devices/battery_hidpp_battery_1
cd ../../share/waybar/modules
clear
cd ../menus/
nvim hardware-privacy.xml
cd ../modules
nvim custom-hardware-privacy.jsonc
lsusb
pacman -Fy lsusb]
pacman -Fy lsusb
sudo pacman -Fy lsusb
sudo pacman -Q | grep usb
udevadm info --export-db | grep usb
cd
clear
ffec
cd .local/lib/denv
nvim privacy.py
cd ../../share/waybar/modules
nvim custom-privacy.jsonc
cd ../layouts/hyprdots
nvim 16.jsonc
cd ../../menus
nvim privacy.xml
cd ../modules
nvim privacy.jsonc
cd ../menus/
nvim audio-video-privacy.xml
cd ../modules
cd ../layouts/hyprdots
nvim 16.jsonc
sudo pacman -S usbutils
clear
cd ../../../lib/denv
cd ../../../../lib/denv
hardware_privacy.py status
hardware_privacy.py status
lsusb
usb-devices
usb-devices > test
nvim test
rm test
cd ../../share/waybar/layouts/hyprdots
nvim 16.jsonc
cd ../../modules
nvim custom-hardware-privacy.jsonc
cd ../menus
nvim hardware-privacy.xml
lsblk -J -o NAME,MOUNTPOINT,TYPE,FSTYPE,SIZE
clear
cp ~/Downloads/hardware_privacy.py ~/.local/lib/denv/
mv ~/Downloads/hardware_privacy.py ~/.local/lib/denv/
cd ~/.local/lib/denv
lsblk -J -o NAME,MOUNTPOINT,TYPE,FSTYPE
hardware_privacy.py interactive-mount
cat /sys/block/sda/removable
clear
mv ~/Downloads/hardware_privacy.py ~/.local/lib/denv/
chmod +x hardware_privacy.py
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-unmount
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-mount
hardware_privacy.py interactive-unmount
hardware_privacy.py interactive-mount
echo "test1\ntest2" | rofi -dmenu -p "Test:"
usb-devices
udevadm info --export-db | grep usb
udevadm info
udevadm info --export-db
qclear
clear
lsusb
lsusb | grep -iE "(camera|webcam|video|uvc|imaging)"
# Replace /dev/video0 with your device\
udevadm info --name=/dev/video0 --query=all | grep -E "(ID_VENDOR|ID_MODEL|ID_SERIAL)"
udevadm info --name=/dev/video0 --query=all | grep -E "(ID_VENDOR|ID_MODEL|ID_SERIAL)"
usb-devices
v4l2-ctl --list-devices
clear
nvim audio-video-privacy.xml
ls -a
rm audio-video-privacy.xml
nvim audio_video_privacy.py
cd ~/.local/lib/denv
nvim audio_video_privacy.py
hardware_privacy.py list-hidraw-devices
chmod +x hardware_privacy.py
hardware_privacy.py list-hidraw-devices
hardware_privacy.py interactive-hidraw-chmod
nvim audio_video_privacy.py
nvim network_privacy.py
ls -a /sys/class/hidraw/
ls -s /etc/wireguard
cd ~/.local/lib/denv
network_privacy.py vpn-menu
chmod +x network_privacy.py
network_privacy.py vpn-menu
clear
chmod +x network_privacy.py
network_privacy.py vpn-menu
network_privacy.py vpn-menu
nvim password_prompt.py
chmod +x network_privacy.py
network_privacy.py vpn-menu
nvim password_prompt.py
network_privacy.py vpn-menu
nvim password_prompt.py
nvim password_prompt.py
cd ~/.local/lib/denv
nvim hardware_privacy.py
rofi -show drun -no-lazy-grab
rofi -show run -no-config
cd ~/.config/rofi
nvim config.rasi
clear
cat ~/.config/rofi/config.rasi | grep -i timeout
rofi -dump-config | grep -i timeout
rofi -show drun -no-lazy-grab
rofi -show run -no-config
journalctl -f &
strace -e signal rofi -show drun 2>&1 | grep -E "(TERM|KILL)"
dmesg | grep -i "killed process"
sudo dmesg | grep -i "killed process"
systemctl --user show-environment | grep TIMEOUT
grep -A5 "timeout {" ~/.config/rofi/config.rasi
mv ~/.config/rofi ~/.config/rofi.bak\
rofi -show run
cd ~/.config/rofi
mv ~/.config/rofi.bak ~/.config/rofi
cd ~/.config/hypr
nvim .
grep -E "(windowrule|workspace.*auto)" ~/.config/hypr/windowrules.conf
grep -E "bind.*rofi|exec.*rofi" ~/.config/hypr/hyprland.conf
grep -E "bind.*rofi|exec.*rofi" ~/.config/hypr/windowrules.conf
clear
journalctl --user -f -u hyprland
rofi
exit
cd ./local/share/
cd
cd ./local/share/
cd .local/share/denv/
nvim .
grep -E "bind.*rofi|exec.*rofi" hyprland.conf
clear
rofi -show run
rofi -show run -steal-focus
journalctl --user -f -u hyprland
journalctl --user -f -u hyprland &
rofi -show run
hyprctl dispatch exec wofi
sudo pacman -S rofi
sudo pacman -S rofi-wayland
sudo pacman -S wofi
wofi
wofi --show
wofi --dmenu
rofi --dmenu
rofi
..
cd waybar
cd layouts/hyprdots
nvim 16.jsonc
rofi
strace -e signal rofi -show drun 2>&1 | grep -E "(TERM|KILL)"
strace -e signal rofi -show drun 2>&1 | grep -E "(TERM|KILL)"
dmesg | grep -i "killed process"
sudo dmesg | grep -i "killed process"
export DISPLAY=:0
rofi -show run
cd ~/.local/lib/denv
clear
rofi -show drun -no-lazy-grab
journalctl -f &
watch -n 0.5 "ps aux | grep rofi"
rofi -show drun
rofi -show drun -v
rofi -show drun -v
grep -r "timeout\|delay" ~/.config/rofi/ 2>/dev/null
rofi -show run -no-config -theme /dev/null
rofi -show run -no-config -theme /dev/null
rofi -show drun
rofi -show drun
ffcm
ffch
sudo pacman -S nauttilus
sudo pacman -S nautilus
sudo pacman -S gnome-shell-extensions
sudo pacman -R nautilus
sudo pacman -S uwsm pipewire pipewire-alsa pipewire-audio pipewire-jack pipewire-pulse gst-plugin-pipewire wireplumber pavucontrol pamixer networkmanager network-manager-applet bluez bluez-utils blueman brightnessctl playerctl udiskie
sudo pacman -S gnome-shell-extensions
sudo pacman -R gnome-shell-extensions
sudo pacman -R nautilus
sudo pacman -R xdg-portal-gnome
sudo pacman -R xdg-desktop-portal-gnome
sudo pacman -R gnome-session
sudo pacman -R gnome-shell
sudo pacman -R gnome-session
sudo pacman -R xdg-desktop-portal-gnome
sudo pacman -R nautilus
watch -n 0.5 "ps aux | grep rofi"
tmux
rofi -show drun -v
rofi -show drun
rofi -show drun
rofi -show drun
rofi -show drun
rofi -show drun
rofi -show drun
echo $DESKTOP_SESSION\
echo $XDG_CURRENT_DESKTOP
echo $DESKTOP_SESSION
clear]
clear]
clear
journalctl -f &\
rofi -show drun
grep -r "pkill.*rofi\|killall.*rofi" ~/.config/
ulimit -a
watch -n 0.1 'ps aux | grep "[r]ofi"'
grep -r "timeout\|delay" ~/.config/rofi/ 2>/dev/null
rofi -show drun -timeout 0
rofi -show drun -timeout 0
grep -r "pkill.*rofi\|killall.*rofi" ~/
clear
rofi -show drun -timeout 0
sudo pacman -S contrab
cd ~/.local/lib/denv
nvim .
sudo strace -e trace=kill -p $(pgrep rofi) 2>&1 | grep -v "No such process"
sudo pacman -S strace
sudo strace -e trace=kill -p $(pgrep rofi) 2>&1 | grep -v "No such process"
rofi -show drun &\
ROFI_PID=$!\
echo "Rofi PID: $ROFI_PID"
sudo strace -e trace=kill -p $ROFI_PID
rofi -show drun &\
ROFI_PID=$!\
echo "Rofi PID: $ROFI_PID"
sudo pacman -R rofi-wayland
sudo pacman -S rofi
rofi -show drun
find ~/.local/share/denv/ -name "*.sh" -exec grep -l "rofi" {} \;
ps aux | grep denv
dolphin &
clear
sudo pacman -S gvim
sudo pacman -R gvim
nvim waybar_privacy_module.py
nvim .
nvim .
watch -n 0.5 "ps aux | grep rofi"
